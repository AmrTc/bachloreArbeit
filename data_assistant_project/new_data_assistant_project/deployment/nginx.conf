events {
    worker_connections 1024;
}

http {
    # Sicherheits-Headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # Upstream für Streamlit
    upstream streamlit {
        server data-assistant:8501;
    }

    # HTTP Server (Port 80)
    server {
        listen 80;
        
        # Flexibler Server-Name - akzeptiert alle Domains/IPs
        server_name _;
        
        # Für spezifische Domain uncommenten:
        # server_name your-domain.com www.your-domain.com;
        # server_name tchagn01.stud.fim.uni-passau.de;

        # Client-Settings für große Uploads
        client_max_body_size 100M;
        client_body_timeout 120s;
        client_header_timeout 120s;

        # Redirect HTTP to HTTPS (aktivieren falls SSL verfügbar)
        # return 301 https://$server_name$request_uri;

        # Hauptroute zur Streamlit-App
        location / {
            proxy_pass http://streamlit;
            proxy_http_version 1.1;
            
            # WebSocket Support für Streamlit
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Standard Proxy Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Streamlit-spezifische Headers
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            
            # Timeouts für lange Requests
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;
            
            # Buffer-Settings
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # Health Check Endpoint
        location /health {
            access_log off;
            return 200 "Data Assistant is healthy\n";
            add_header Content-Type text/plain;
        }

        # Nginx Status (nur lokal)
        location /nginx-status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow ::1;
            deny all;
        }
    }

    # HTTPS Server (Port 443) - aktivieren falls SSL-Zertifikate vorhanden
    server {
        listen 443 ssl http2;
        server_name _;
        
        # SSL-Zertifikate (Pfade anpassen)
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # SSL-Sicherheitseinstellungen
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # HSTS Header (nur bei echtem SSL aktivieren)
        # add_header Strict-Transport-Security "max-age=31536000" always;

        # Gleiche Konfiguration wie HTTP
        client_max_body_size 100M;
        client_body_timeout 120s;
        client_header_timeout 120s;

        location / {
            proxy_pass http://streamlit;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;
            proxy_buffering off;
            proxy_request_buffering off;
        }

        location /health {
            access_log off;
            return 200 "Data Assistant is healthy (HTTPS)\n";
            add_header Content-Type text/plain;
        }
    }

    # Logging
    access_log /var/log/nginx/data_assistant_access.log;
    error_log /var/log/nginx/data_assistant_error.log;
} 