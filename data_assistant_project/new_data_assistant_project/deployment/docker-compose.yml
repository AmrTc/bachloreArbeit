version: '3.8'

services:
  data-assistant:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    container_name: data_assistant_app
    restart: unless-stopped
    ports:
      - "8501:8501"
    environment:
      - PYTHONPATH=/app
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - DEBUG=False
    env_file:
      - ../.env
    volumes:
      # Persistente Datenbank
      - ./data/database:/app/src/database
      # Logs
      - ./logs:/app/logs
      # User Profiles (falls ben√∂tigt)
      - ./data/user_profiles:/app/data/user_profiles
    networks:
      - data_assistant_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Optional: Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: data_assistant_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - data-assistant
    networks:
      - data_assistant_network
    profiles:
      - production

  # Optional: Monitoring mit Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: data_assistant_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - data_assistant_network
    profiles:
      - monitoring

  # Optional: Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: data_assistant_grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - data_assistant_network
    profiles:
      - monitoring

networks:
  data_assistant_network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
